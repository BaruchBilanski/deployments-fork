{{- if .Values.Infra }}
# Aqua infrastructure information about the installation platform and destination
infra:
# Platform namespace
# - Kubernetes and Pivotal PKS example
#   kubectl create namespace aqua
# - Openshift example
#   oc new-project aqua
  namespace: {{ .Values.Infra.Namespace }}
# Kubectl Context from ~/.kube/config choose your context
  context: {{ .Values.Infra.Context }}
# Platform to use: Kubernetes, Openshift, Pivotal
  platform: {{ .Values.Infra.Platform }}
{{- else }}
# Aqua infrastructure information about the installation platform and destination
# infra:
# Platform namespace
# - Kubernetes and Pivotal PKS example
#   kubectl create namespace aqua
# - Openshift example
#   oc new-project aqua
#  namespace: {{ .Values.Infra.Namespace }}
# Kubectl Context from ~/.kube/config choose your context
#  context: {{ .Values.Infra.Context }}
# Platform to use: Kubernetes, Openshift, Pivotal
#  platform: {{ .Values.Infra.Platform }}
{{- end }}
{{- if .Values.Common }}
# Aqua Common variables for all installation process
common:
# Installation version for aqua unless overide version in each service as server, gateway or database
  version: "{{ .Values.Common.Version }}"
  registry: {{ .Values.Common.Registry }}
  PullPolicy: {{ .Values.Common.PullPolicy }}
# If to enable dockerless scaning configuration
  dockerless: {{ .Values.Common.Dockerless }}
# Docker socker path for example if using pivotal pks docker socket should be /var/vcap/data/sys/run/docker/docker.sock
  dockerSocketPath: "{{ .Values.Common.DockerSocketPath }}"
# Pull docker image secret name
  pullImageSecret: {{ .Values.Common.PullImageSecret }}
  serviceAccount: {{ .Values.Common.ServiceAccount }}
# Aqua admin password secret name
  adminPasswordSecretName: {{ .Values.Common.AdminPasswordSecretName }}
# Aqua admin password secret key
  adminPasswordSecretKey: {{ .Values.Common.AdminPasswordSecretKey }}
# Aqua License token secret name
  aquaLicenseSecretName: {{ .Values.Common.AquaLicenseSecretName }}
# Aqua License token secret key
  aquaLicenseSecretKey: {{ .Values.Common.AquaLicenseSecretKey }}
  aquaInternalDbSecretName: {{ .Values.Common.AquaInternalDbSecretName }}
  aquaInternalDbSecretKey: {{ .Values.Common.AquaInternalDbSecretKey }}
  aquaInternalDbPvc: {{ .Values.Common.AquaInternalDbPvc }}
  aquaInternalDbPvcName: {{ .Values.Common.AquaInternalDbPvcName }}
  aquaInternalDbPvcSize: {{ .Values.Common.AquaInternalDbPvcSize }}
  initEnforcer: {{ .Values.Common.InitEnforcer }}
  enforcerSecretName: {{ .Values.Common.EnforcerSecretName }}
  enforcerSecretKey: {{ .Values.Common.EnforcerSecretKey }}
{{- else }}
# Aqua Common variables for all installation process
# common:
# Installation version for aqua unless overide version in each service as server, gateway or database
#  version: "4.2"
# If to enable dockerless scaning configuration
#  dockerless: false
# Docker socker path for example if using pivotal pks docker socket should be /var/vcap/data/sys/run/docker/docker.sock
#  dockerSocketPath: "/var/run/docker.sock"
# Pull docker image secret name
#  pullImageSecret:
# Aqua admin password secret name
#  adminPasswordSecretName:
# Aqua admin password secret key
#  adminPasswordSecretKey:
# Aqua License token secret name
#  aquaLicenseSecretName:
# Aqua License token secret key
#  adminPasswordSecretKey:
{{- end }}
{{- if .Values.Security }}
# Aqua Security Properties
security:
  rbac: {{ .Values.Security.Rbac }}
  privileged: {{ .Values.Security.Privileged }}
  roleRef: {{ .Values.Security.RoleRef }}
{{- else }}
# Aqua Security Properties
# security:
#   rbac: true
#   privileged: true
#   roleRef: 
{{- end }}
{{- if .Values.Server }}
# Aqua Server Service
server:
  replicas: {{ .Values.Server.Replicas }}
  service: "{{ .Values.Server.Service }}"
  {{- if .Values.Server.Image }}
  image:
    repository: {{ .Values.Server.Image.Repository }}
    registry: {{ .Values.Server.Image.Registry }}
    tag: "{{ .Values.Server.Image.Tag }}"
    pullPolicy: {{ .Values.Server.Image.PullPolicy }}
  {{- end }}
{{- else }}
# Aqua Server Service
# server:
#   replicas: 1
#   service: "LoadBalancer"
#   image:
#     repository: server
#     registry: registry.aquasec.com
#     tag: "4.2"
#     pullPolicy: Always
{{- end }}
{{- if .Values.Gateway }}
# Aqua Gateway Service
gateway:
  replicas: {{ .Values.Gateway.Replicas }}
  service: "{{ .Values.Gateway.Service }}"
  {{- if .Values.Gateway.Image }}
  image:
    repository: {{ .Values.Gateway.Image.Repository }}
    registry: {{ .Values.Gateway.Image.Registry }}
    tag: "{{ .Values.Gateway.Image.Tag }}"
    pullPolicy: {{ .Values.Gateway.Image.PullPolicy }}
  {{- end }}
{{- else }}
# Aqua Gateway Service
# gateway:
#   replicas: 1
#   service: "ClusterIP"
#   image:
#     repository: gateway
#     registry: registry.aquasec.com
#     tag: "4.2"
#     pullPolicy: Always
{{- end }}
{{- if .Values.Database }}
# Aqua Database Service
database:
  replicas: {{ .Values.Database.Replicas }}
  service: "{{ .Values.Database.Service }}"
  {{- if .Values.Database.Image }}
  image:
    repository: {{ .Values.Database.Image.Repository }}
    registry: {{ .Values.Database.Image.Registry }}
    tag: "{{ .Values.Database.Image.Tag }}"
    pullPolicy: {{ .Values.Database.Image.PullPolicy }}
  {{- end }}
{{- else }}
# Aqua Database Service
# database:
#   replicas: 1
#   service: "ClusterIP"
#   image:
#     repository: database
#     registry: registry.aquasec.com
#     tag: "4.2"
#     pullPolicy: Always
{{- end }}
{{- if .Values.ExternalDb }}
# Aqua External Database
externalDb:
  scalock:
    name: {{ .Values.ExternalDb.Scalock.Name }}
    host: {{ .Values.ExternalDb.Scalock.Host }}
    port: {{ .Values.ExternalDb.Scalock.Port }}
    username: {{ .Values.ExternalDb.Scalock.Username }}
    passwordSecretName: {{ .Values.ExternalDb.Scalock.PasswordSecretName }}
    passwordSecretKey: {{ .Values.ExternalDb.Scalock.PasswordSecretKey }}
  audit: 
    name: {{ .Values.ExternalDb.Audit.Name }}
    host: {{ .Values.ExternalDb.Audit.Host }}
    port: {{ .Values.ExternalDb.Audit.Port }}
    username: {{ .Values.ExternalDb.Audit.Username }}
    passwordSecretName: {{ .Values.ExternalDb.Audit.PasswordSecretName }}
    passwordSecretKey: {{ .Values.ExternalDb.Audit.PasswordSecretKey }}
{{- else }}
# Aqua External Database
# externalDb:
#   scalock:
#     name: 
#     host: 
#     port: 
#     username: 
#     passwordSecretName: 
#     passwordSecretKey: 
#   audit: 
#     name: 
#     host: 
#     port: 
#     username: 
#     passwordSecretName: 
#     passwordSecretKey: 
{{- end }}
